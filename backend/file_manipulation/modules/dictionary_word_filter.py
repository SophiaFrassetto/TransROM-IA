from ..core.base_filter import QualityFilter
from ..datatypes.text_candidate import TextCandidate


class DictionaryWordFilter(QualityFilter):
    """
    Filtro que bonifica textos que contêm palavras reais do dicionário inglês.
    Usa um pequeno conjunto de palavras comuns para checagem rápida.
    Bonifica se encontrar pelo menos min_words palavras válidas.
    """

    def __init__(self, min_words: int = 2):
        self.dictionary = set(
            [
                "the",
                "and",
                "you",
                "that",
                "was",
                "for",
                "are",
                "with",
                "his",
                "they",
                "this",
                "have",
                "from",
                "one",
                "had",
                "word",
                "but",
                "not",
                "what",
                "all",
                "were",
                "when",
                "your",
                "can",
                "said",
                "there",
                "use",
                "each",
                "which",
                "she",
                "how",
                "their",
                "if",
                "will",
                "up",
                "other",
                "about",
                "out",
                "many",
                "then",
                "them",
                "these",
                "so",
                "some",
                "her",
                "would",
                "make",
                "like",
                "him",
                "into",
                "time",
                "has",
                "look",
                "two",
                "more",
                "write",
                "go",
                "see",
                "number",
                "no",
                "way",
                "could",
                "people",
                "my",
                "than",
                "first",
                "water",
                "been",
                "call",
                "who",
                "oil",
                "its",
                "now",
                "find",
                "long",
                "down",
                "day",
                "did",
                "get",
                "come",
                "made",
                "may",
                "part",
                "over",
                "new",
                "sound",
                "take",
                "only",
                "little",
                "work",
                "know",
                "place",
                "years",
                "live",
                "me",
                "back",
                "give",
                "most",
                "very",
                "after",
                "thing",
                "our",
                "just",
                "name",
                "good",
                "sentence",
                "man",
                "think",
                "say",
                "great",
                "where",
                "help",
                "through",
                "much",
                "before",
                "line",
                "right",
                "too",
                "means",
                "old",
                "any",
                "same",
                "tell",
                "boy",
                "follow",
                "came",
                "want",
                "show",
                "also",
                "around",
                "form",
                "three",
                "small",
                "set",
                "put",
                "end",
                "does",
                "another",
                "well",
                "large",
                "must",
                "big",
                "even",
                "such",
                "because",
                "turn",
                "here",
                "why",
                "ask",
                "went",
                "men",
                "read",
                "need",
                "land",
                "different",
                "home",
                "us",
                "move",
                "try",
                "kind",
                "hand",
                "picture",
                "again",
                "change",
                "off",
                "play",
                "spell",
                "air",
                "away",
                "animal",
                "house",
                "point",
                "page",
                "letter",
                "mother",
                "answer",
                "found",
                "study",
                "still",
                "learn",
                "should",
                "America",
                "world",
            ]
        )
        self.min_words = min_words

    def filter(self, candidate: TextCandidate) -> float:
        text = candidate.text_content.lower()
        words = [w for w in text.split() if w.isalpha()]
        found = sum(1 for w in words if w in self.dictionary)
        return 1.0 if found >= self.min_words else 0.0
